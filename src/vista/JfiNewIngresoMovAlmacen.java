package vista;

//v1.0 SCN
import controlador.ConAlmacen;
import controlador.ConCategoria;
import controlador.ConInventarioAlmacen;
import controlador.ConItem;
import controlador.ConMovimientoAlmacen;
import controlador.ConProveedor;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.math.BigDecimal;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.DateTimeException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import modelo.Almacen;
import modelo.Categoria;
import modelo.InventarioAlmacen;
import modelo.Item;
import modelo.MovimientoAlmacen;
import modelo.Proveedor;

public class JfiNewIngresoMovAlmacen extends javax.swing.JInternalFrame {

    public JfiNewIngresoMovAlmacen() {
        initComponents();
        this.setSize(new Dimension(400, 480));
        this.setTitle("Registrar Movimiento de Ingreso a Almacen");
        ComboCategoria.removeAllItems();
        ComboCategoria.addItem("Seleccione una categoria");
        cargarComboCategoria();
        ComboItem.removeAllItems();
        ComboItem.addItem("Seleccione un articulo");
        ComboAlm.removeAllItems();
        ComboAlm.addItem("Seleccione un almacen");
        cargarComboAlmacen();
        ComboProveedor.removeAllItems();
        ComboProveedor.addItem("Seleccione proveedor");
        cargarComboProveedor();
        SpinCantidad.setValue(1);
    }

    private void cargarComboCategoria() {
        ConCategoria metodCat = new ConCategoria();
        ArrayList<Categoria> listCategoria = metodCat.getListCategoria();

        for (int i = 0; i < listCategoria.size(); i++) {
            ComboCategoria.addItem(listCategoria.get(i).getId_categoria() + "-" + listCategoria.get(i).getNom_categoria());
        }
    }

    private void cargarComboItem(String categoria) {
        ConItem metodItem = new ConItem();
        ArrayList<Item> listItem = metodItem.conListItem(categoria);

        for (int i = 0; i < listItem.size(); i++) {
            ComboItem.addItem(listItem.get(i).getId_item() + "-" + listItem.get(i).getNom_item());
        }
    }

    private void cargarComboAlmacen() {
        ConAlmacen metodAlm = new ConAlmacen();
        ArrayList<Almacen> listAlmacen = metodAlm.getListAlmacen();

        for (int i = 0; i < listAlmacen.size(); i++) {
            ComboAlm.addItem(listAlmacen.get(i).getCod_alm() + "-" + listAlmacen.get(i).getNom_alm());
        }
    }

    private void cargarComboProveedor() {
        ConProveedor metodProv = new ConProveedor();
        ArrayList<Proveedor> listProveedor = metodProv.getListProveedor();

        for (int i = 0; i < listProveedor.size(); i++) {
            ComboProveedor.addItem(listProveedor.get(i).getNom_proveedor());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ComboItem = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        ComboAlm = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CalendarFecha = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        ComboProveedor = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        BtnRegistrar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        ComboCategoria = new javax.swing.JComboBox<>();
        InputComentario = new javax.swing.JTextField();
        SpinCantidad = new javax.swing.JSpinner();
        InputMotivo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        InputPrecioUnit = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Nuevo Ingreso a Almacén");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 390, 20));

        jLabel2.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        jLabel2.setText("Indique artículo:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 135, -1, -1));

        ComboItem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboItemActionPerformed(evt);
            }
        });
        getContentPane().add(ComboItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 180, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        jLabel3.setText("Almacén destino:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 165, -1, -1));

        ComboAlm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboAlm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboAlmActionPerformed(evt);
            }
        });
        getContentPane().add(ComboAlm, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 180, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        jLabel4.setText("Motivo:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 195, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        jLabel5.setText("Fecha:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 225, -1, -1));

        CalendarFecha.setDateFormatString("yyyy/MM/dd");
        getContentPane().add(CalendarFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 180, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        jLabel6.setText("Proveedor:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 255, -1, -1));

        ComboProveedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboProveedorActionPerformed(evt);
            }
        });
        getContentPane().add(ComboProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 180, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        jLabel7.setText("Cantidad:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 285, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        jLabel9.setText("Comentario:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 345, -1, -1));

        BtnRegistrar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnRegistrar.setText("Registrar");
        BtnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRegistrarActionPerformed(evt);
            }
        });
        getContentPane().add(BtnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 390, -1, -1));

        jLabel8.setText("Indique categoria:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        ComboCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboCategoriaActionPerformed(evt);
            }
        });
        getContentPane().add(ComboCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 180, -1));

        InputComentario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputComentarioActionPerformed(evt);
            }
        });
        getContentPane().add(InputComentario, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 340, 180, -1));

        SpinCantidad.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpinCantidadStateChanged(evt);
            }
        });
        getContentPane().add(SpinCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 80, -1));

        InputMotivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputMotivoActionPerformed(evt);
            }
        });
        getContentPane().add(InputMotivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 180, -1));

        jLabel10.setText("Precio unitario:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 315, -1, -1));
        getContentPane().add(InputPrecioUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 310, 180, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRegistrarActionPerformed
        String fecha = ((JTextField) CalendarFecha.getDateEditor().getUiComponent()).getText();
        ConMovimientoAlmacen metodMovAlm = new ConMovimientoAlmacen();
        boolean error = false;

        //InputPrecioUnitario
        try {
            if (Double.parseDouble(InputPrecioUnit.getText()) < 0) {
                JOptionPane.showMessageDialog(null, "debe ingresar un precio mayor a 0");
                error = true;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "debe ingresar un precio real");
            error = true;
        }

        if (ComboCategoria.getSelectedItem().toString().equalsIgnoreCase("Seleccione una categoria")) {
            JOptionPane.showMessageDialog(null, "Seleccione una categoria");
        } else if (ComboItem.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Seleccione un articulo");
        } else if (ComboItem.getSelectedItem().toString().equalsIgnoreCase("Seleccione un articulo")) {
            JOptionPane.showMessageDialog(null, "Seleccione un articulo");
        } else if (ComboAlm.getSelectedItem().toString().equalsIgnoreCase("Seleccione un almacen")) {
            JOptionPane.showMessageDialog(null, "Seleccione un almacen");
        } else if ((fecha.isBlank() || fecha.isEmpty())) {
            JOptionPane.showMessageDialog(null, "Indique una fecha");
        } else if (!metodMovAlm.valFecha(fecha)) {
            JOptionPane.showMessageDialog(null, "Ingrese una fecha valida");
        } else {
            if (!error) {
                ConMovimientoAlmacen metod = new ConMovimientoAlmacen();
                MovimientoAlmacen movAlm = new MovimientoAlmacen();
                String[] split = ComboItem.getSelectedItem().toString().split("-");
                String IdItem = split[0];
                ConProveedor metodProv = new ConProveedor();
                int idProveedor = metodProv.conProveedor("", ComboProveedor.getSelectedItem().toString(), "", "").getId_proveedor();
                String[] split1 = ComboAlm.getSelectedItem().toString().split("-");
                String IdAlm = split1[0];

                Date fechaR = null;
                try {
                    fechaR = new Date(CalendarFecha.getDate().getTime());
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error cae aca: " + e);
                }

                movAlm.setCod_almacen(IdAlm);
                movAlm.setId_item(IdItem);
                movAlm.setMot_mov(InputMotivo.getText());
                movAlm.setFec_mov(fechaR);
                movAlm.setId_proveedor(idProveedor);
                movAlm.setCantidad(Integer.parseInt(SpinCantidad.getValue().toString()));
                movAlm.setPrecio_unit(new BigDecimal(InputPrecioUnit.getText()));
                movAlm.setComentario(InputComentario.getText());

                if (metod.InsIngresoMovAlmacen(movAlm)) {
                    ConInventarioAlmacen conInv = new ConInventarioAlmacen();
                    
                    InventarioAlmacen inv = new InventarioAlmacen();
                    inv.setId_almacen(IdAlm);
                    inv.setId_item(IdItem);
                    inv.setPrecio_red(new BigDecimal(InputPrecioUnit.getText()));
                    inv.setCantidad(Integer.parseInt(SpinCantidad.getValue().toString()));
                    
                    JOptionPane.showMessageDialog(null, "Se inserto correctamente el movimiento, el stock acual es de: " + conInv.regItemInventario(inv, "I"));

                }
            }
        }

    }//GEN-LAST:event_BtnRegistrarActionPerformed

    private void ComboItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboItemActionPerformed

    private void ComboCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboCategoriaActionPerformed
        ComboItem.removeAllItems();
        if (ComboCategoria.getSelectedItem() == null) {
        } else if (!ComboCategoria.getSelectedItem().toString().equalsIgnoreCase("Seleccione una categoria")) {
            String[] split = ComboCategoria.getSelectedItem().toString().split("-");
            String IdCategoria = split[0];
            cargarComboItem(IdCategoria);
            if (ComboItem.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "La categoria no cuenta con articulos asociados");
            }
        }
    }//GEN-LAST:event_ComboCategoriaActionPerformed

    private void ComboAlmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboAlmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboAlmActionPerformed

    private void ComboProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboProveedorActionPerformed

    private void InputComentarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputComentarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputComentarioActionPerformed

    private void SpinCantidadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpinCantidadStateChanged
        try {
            int cantidad = Integer.parseInt(SpinCantidad.getValue().toString());

            if (cantidad < 0) {
                JOptionPane.showMessageDialog(null, "La cantidad minima es 1");
                SpinCantidad.setValue(1);
            }
        } catch (HeadlessException | NumberFormatException e) {
            System.out.println("Error: " + e);
            JOptionPane.showMessageDialog(null, "Indique un numero entero valido" + e);
            SpinCantidad.setValue(1);
        }
    }//GEN-LAST:event_SpinCantidadStateChanged

    private void InputMotivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputMotivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputMotivoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnRegistrar;
    private com.toedter.calendar.JDateChooser CalendarFecha;
    private javax.swing.JComboBox<String> ComboAlm;
    private javax.swing.JComboBox<String> ComboCategoria;
    private javax.swing.JComboBox<String> ComboItem;
    private javax.swing.JComboBox<String> ComboProveedor;
    private javax.swing.JTextField InputComentario;
    private javax.swing.JTextField InputMotivo;
    private javax.swing.JTextField InputPrecioUnit;
    private javax.swing.JSpinner SpinCantidad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
